name: Run Benchmarks

on:
  push:
    branches: [benchmarks]
  pull_request:
    branches: [main]

jobs:
  benchmark:
    name: Run Benchmarks on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build PyCrucible runner in release mode
        run: cargo build -p pycrucible_runner --release

      - name: Build PyCrucible in release mode
        run: cargo build -p pycrucible --release

      - name: Copy release build to benchmarks directory
        run: |
          if [ -f target/release/pycrucible ]; then
            cp target/release/pycrucible benchmarks/
          elif [ -f target/release/pycrucible.exe ]; then
            cp target/release/pycrucible.exe benchmarks/
          else
            echo "Built binary not found in target/release:"
            ls -la target/release || true
            exit 1
          fi
        shell: bash

      - name: Run benchmarks
        run: python benchmarks/run_benchmarks.py

      - name: Upload benchmark results (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: pycrucible-benchmarks
          path: benchmarks/results

      # Optional: automatically update README.md with results.md
      - name: Commit benchmark results into README.md
        if: ${{ always() }}     # run even if previous steps failed so we still upload/commit results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # replace README.md with the results (or merge/insert as you prefer)
          cp benchmarks/results/results.md benchmarks.md
          git add benchmarks.md
          # if nothing to commit, exit 0
          git diff --staged --quiet && echo "No changes to commit" || git commit -m "ci: update benchmark results"
          git push origin HEAD:${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}