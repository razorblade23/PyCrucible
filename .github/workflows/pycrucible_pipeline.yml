name: Build and Release PyCrucible

on:
  push:
    branches: [main, ]
  release:
    types: [created]

permissions:
  contents: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build Artifacts
    needs: test
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
    runs-on: ubuntu-latest
    
    services:
      docker:
        image: docker:20.10-dind
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
  
      - name: Build project with cross
        run: cross build --release --target ${{ matrix.target }}
  
      - name: Prepare binary
        run: |
          VERSION=${{ github.ref_name }}
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            BINARY_EXT=".exe"
          else
            BINARY_EXT=""
          fi
          BINARY_NAME=pycrucible_${VERSION}_${{ matrix.target }}${BINARY_EXT}
          cp target/${{ matrix.target }}/release/pycrucible${BINARY_EXT} $BINARY_NAME
          echo "binary_name=$BINARY_NAME" >> $GITHUB_ENV
  
      - name: Upload Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ env.binary_name }}
          path: ${{ env.binary_name }}

  run_test_app:
    name: embed_cowsay
    needs: build
    strategy:
      fail-fast: false
      matrix:
        config:
          [ {runner: windows-latest,
             bin_ext: .exe,
            },
            {runner: ubuntu-24.04,
             bin_ext: "",
            },
          ]

          
    runs-on: ${{ matrix.config.runner }}

    steps:

      - name: Download all artifacts
        uses: actions/download-artifact@v4.2.1

      - name: Clone example project
        run: git clone https://github.com/JamesParrott/simple-python-project-for-PyCrucible/

      - name: Copy PyCrucible executables to project
        shell: bash
        run: cp ./pycrucible_*/* simple-python-project-for-PyCrucible

      - name: Make downloaded PyCrucuble executables executable
        if: ${{ !contains(matrix.config.runner,'windows') }}
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: chmod +x pycrucible_*

      - name: Show files
        if: contains(matrix.config.runner,'windows')
        shell: cmd
        working-directory: simple-python-project-for-PyCrucible
        run: dir /a

      - name: Run PyCrucible
        if: contains(matrix.config.runner,'windows')
        shell: cmd
        working-directory: simple-python-project-for-PyCrucible
        run: .\pycrucible_${{ github.ref_name }}_x86_64-pc-windows-gnu.exe -e . -o cowsay.exe --debug

      - name: Run PyCrucible
        if: ${{ !contains(matrix.config.runner,'windows') }}
        working-directory: simple-python-project-for-PyCrucible
        run: ./pycrucible_${{ github.ref_name }}_*linux* -e . -o cowsay --debug

      - name: Test cowsay${{ matrix.config.bin_ext}}
        shell: bash
        working-directory: simple-python-project-for-PyCrucible
        run: ./cowsay${{ matrix.config.bin_ext}}  


  release:
    name: Create Release
    needs: [build, run_test_app]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4.2.1

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/pycrucible_*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
