name: Build, Test, and Release PyCrucible

on:
  push:
    tags:
      - "v*.*.*"
    branches: [main]
  release:
    types: [created]

permissions:
  contents: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run Tests (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build runner
        run: cargo build -p pycrucible_runner --target x86_64-unknown-linux-gnu

      - name: Run tests
        run: |
          cargo test -p pycrucible --target x86_64-unknown-linux-gnu
          cargo test -p shared --target x86_64-unknown-linux-gnu

  dist:
    name: Build Distributables (cargo-dist)
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-dist
        run: cargo install cargo-dist --version 0.30.0

      - name: Run cargo-dist build
        run: cargo dist build --release

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: target/distrib/

  smoke-test:
    name: Smoke Test PyCrucible
    needs: dist
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin_ext: ""
          - runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            bin_ext: ""
          # Windows
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            bin_ext: ".exe"
          - runner: windows-11-arm
            target: aarch64-pc-windows-msvc
            bin_ext: ".exe"
          # macOS
          - runner: macos-13
            target: x86_64-apple-darwin
            bin_ext: ""
          - runner: macos-14
            target: aarch64-apple-darwin
            bin_ext: ""

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/

      - name: Clone example project
        run: git clone https://github.com/JamesParrott/simple-python-project-for-PyCrucible

      - name: Extract and copy binary
        shell: bash
        run: |
          tar -xf dist/pycrucible-${{ matrix.target }}.tar.xz -C dist/
          cp dist/pycrucible${{ matrix.bin_ext }} simple-python-project-for-PyCrucible/

      - name: Make binary executable (non-Windows)
        if: runner.os != 'Windows'
        run: chmod +x simple-python-project-for-PyCrucible/pycrucible${{ matrix.bin_ext }}

      - name: Run PyCrucible
        working-directory: simple-python-project-for-PyCrucible
        run: ./pycrucible${{ matrix.bin_ext }} -e . -o cowsay${{ matrix.bin_ext }} --debug

      - name: Smoke-test generated artifact
        working-directory: simple-python-project-for-PyCrucible
        run: ./cowsay${{ matrix.bin_ext }}

  build-wheels:
    name: Build Wheels for PyPI
    if: github.event_name == 'release'
    needs: [dist, smoke-test]
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
          - runner: macos-13
            target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Build runner
        run: cargo build --release -p pycrucible_runner --target ${{ matrix.target }}

      - name: Install patchelf (Linux only)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y patchelf

      - name: Build wheel
        run: maturin build --release --out dist --target ${{ matrix.target }} --manifest-path pycrucible/Cargo.toml

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.target }}
          path: dist/*.whl

  release-to-pypi:
    name: Upload Release to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pycrucible/

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - run: |
          find dist -type f ! -name "*.whl" ! -name "*.tar.gz" -delete
          ls -R dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          packages-dir: dist/

  release-to-gh:
    name: Publish to GitHub Releases
    if: github.event_name == 'release'
    needs: [dist, smoke-test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: target/distrib/

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/distrib/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
